@page "/"
@using HeroPack.Enums;
@using HeroPack.Services;
@inject Game game

<PageTitle>Index</PageTitle>
@if(game.Hero.Health > 0)
{
    <button class="btn btn-warning"
    @onclick="async () => await game.Action()">
        Attack
    </button>
    @if(game.CurrentPlace?.Previous is not null)
    {
        <button class="btn btn-info"
        @onclick="() => game.Move(Directions.Previous)">
            Previous
        </button>
    }
    @if (game.CurrentPlace?.Next is not null)
    {
        <button class="btn btn-info"
        @onclick="() => game.Move(Directions.Next)">
            Next
        </button>
    }
}

<h1>Game</h1>
<h3>@game.CurrentPlace?.Name</h3>

@* Game message *@
@if (game.Message.Length > 0)
{
    <div class="alert alert-danger" role="alert">
        @game.Message
    </div>
}

<h3>Hero</h3>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Health</th>
            <th>Mana</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@game.Hero.Name</td>
            <td>
                <div class="progress" role="progressbar" aria-label="Success example"
                     aria-valuenow="@Math.Round(game.Hero.Health, 2)" aria-valuemin="0"
                        aria-valuemax="100">
                    <div class="progress-bar bg-success" style="width: @Math.Round(game.Hero.Health, 2)%">@Math.Round(game.Hero.Health, 2)%</div>
                </div>
            </td>
            <td>
                <div class="progress" role="progressbar" aria-label="Success example"
                     aria-valuenow="@Math.Round(game.Hero.Mana, 2)" aria-valuemin="0"
                     aria-valuemax="100">
                    <div class="progress-bar bg-info" style="width: @Math.Round(game.Hero.Mana, 2)%">@Math.Round(game.Hero.Mana, 2)%</div>
                </div>
            </td>

        </tr>
    </tbody>
</table>
<table class="table">
    <thead>
        <tr>
            <th>Spells</th>
            <th>Mana Cost</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var spell in game.Hero.Spellbook)
        {
            <tr>
                <td>@spell.Name</td>
                <td>@spell.ManaCost</td>
                <td>
                    @if (spell.ManaCost <= game.Hero.Mana)
                    {
                        <button class="btn btn-primary" @onclick="async () => await game.Action(spell)">Cast Spell</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (game.CurrentPlace is not null && 
     game.CurrentPlace.Monsters is not null)
{
    <h3>Monsters</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Adversary</th>
                <th>Health</th>
                <th>Mana</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var monster in game.CurrentPlace.Monsters)
            {
                <tr>
                    <td>@monster.Name</td>
                    <td>
                        <div class="progress" role="progressbar" aria-label="Success example"
                             aria-valuenow="@Math.Round(monster.Health, 2)" aria-valuemin="0"
                             aria-valuemax="100">
                            <div class="progress-bar bg-success" style="width: @Math.Round(monster.Health, 2)%">@Math.Round(monster.Health, 2)%</div>
                        </div>
                    </td>
                    <td>
                        <div class="progress" role="progressbar" aria-label="Success example"
                             aria-valuenow="@Math.Round(monster.Mana, 2)" aria-valuemin="0"
                             aria-valuemax="100">
                            <div class="progress-bar bg-info" style="width: @Math.Round(monster.Mana, 2)%">@Math.Round(monster.Mana, 2)%</div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h3>Shop</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Size</th>
                <th>Hands</th>
                <th>Durability</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in game.CurrentPlace.Shop.Get(null))
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Size</td>
                    <td>@item.NoOfHands</td>
                    <td>@item.Durability</td>
                    <td>@item.Price</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => game.Message = game.Hero.Purchace(game.Shop, item)">Buy</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Backpack </h3>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Size</th>
            <th>Hands</th>
            <th>Durability</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in game.HerosBackpack)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Size</td>
                <td>@item.NoOfHands</td>
                <td>@item.Durability</td>
                <td>@item.Quantity</td>
                <td>@item.Price</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => game.Message = game.Hero.Sell(game.Shop, item)">Sell</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (game.CurrentPlace is not null)
{
    <h3>Battle Log</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Attacker</th>
                <th>Attacker Health</th>
                <th>Damage</th>
                <th>Adversary</th>
                <th>Adversary Health</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in game.CurrentPlace.BattleLog)
            {
                if (log?.Message?.Length > 0)
                {
                    <tr>
                        <td>@log.AttackerName</td>
                        <td>@Math.Round(log.AttackerHealth, 2)</td>
                        <td colspan="3">@log.Message</td>
                        <td>@log.Type</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@log.AttackerName</td>
                        <td>@Math.Round(log.AttackerHealth, 2)</td>
                        <td>@Math.Round(log.Damage, 2)</td>
                        <td>@log.AdversaryName</td>
                        <td>@Math.Round(log.AdversaryHealth, 2)</td>
                        <td>@log.Type</td>
                        <td>@log.Message</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
<h3>Holding in hands</h3>
@* Vad håller hjälten i händerna *@
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Size</th>
            <th>Hands</th>
            <th>Durability</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var hand in game.Hero.GetItemsInHands())
        {
            <tr>
                <td>@hand?.Item?.Name</td>
                <td>@hand?.Item?.Size</td>
                <td>@hand?.Item?.NoOfHands</td>
                <td>@hand?.Item?.Durability</td>
                <td>@hand?.Item?.Quantity</td>
            </tr>
        }
    </tbody>
</table>

@if (game.CurrentPlace?.Loot is not null && game.CurrentPlace.Loot.Count > 0)
{
    <h3>Loot on the ground</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Size</th>
                <th>Hands</th>
                <th>Durability</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in game.CurrentPlace.Loot)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Size</td>
                    <td>@item.NoOfHands</td>
                    <td>@item.Durability</td>
                    <td>@item.Quantity</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => game.Hero.PickUp(game.CurrentPlace.Loot, item)">Pick Up</button>
                        <button class="btn btn-primary"
                        @onclick="() => game.Hero.AddToBackpack(game.CurrentPlace.Loot, item)">
                            Add to backpack
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



